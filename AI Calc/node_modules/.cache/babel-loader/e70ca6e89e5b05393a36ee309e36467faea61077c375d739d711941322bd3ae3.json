{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddas0\\\\OneDrive\\\\Desktop\\\\AI Calc\\\\src\\\\components\\\\Calculator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Container, Form, Button, Card, Row, Col, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport * as math from 'mathjs';\nimport { SymbolKeyboard } from './SymbolKeyboard';\nimport './Calculator.css';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const Calculator = () => {\n  _s();\n  const [state, setState] = useState({\n    input: '',\n    result: '',\n    history: [],\n    error: undefined,\n    isLoading: false\n  });\n  const inputRef = useRef(null);\n  const handleInputChange = event => {\n    setState(prev => ({\n      ...prev,\n      input: event.target.value,\n      error: undefined\n    }));\n  };\n  const evaluateExpression = (expr, variables) => {\n    try {\n      return math.evaluate(expr, {\n        ...variables,\n        e: math.e,\n        pi: math.pi\n      });\n    } catch (err) {\n      throw new Error(`Invalid expression: ${expr}`);\n    }\n  };\n  const numericalIntegration = (f, a, b) => {\n    const n = 1000; // number of intervals\n    const h = (b - a) / n;\n    let sum = f(a) + f(b);\n    for (let i = 1; i < n; i++) {\n      const x = a + i * h;\n      sum += 2 * f(x);\n    }\n    for (let i = 1; i < n; i++) {\n      const x = a + (i - 0.5) * h;\n      sum += 4 * f(x);\n    }\n    return h / 6 * sum;\n  };\n  const parseIntegral = equation => {\n    const integralRegex = /∫\\s*([^d]*)\\s*d([a-z])/gi;\n    const matches = Array.from(equation.matchAll(integralRegex));\n    if (matches.length === 0) {\n      throw new Error('No valid integral found');\n    }\n    const expr = matches[0][1].trim();\n    const variable = matches[0][2].toLowerCase();\n    const remainingExpr = equation.replace(matches[0][0], expr);\n    if (matches.length > 1) {\n      const {\n        expr: nestedExpr,\n        vars: nestedVars\n      } = parseIntegral(remainingExpr);\n      return {\n        expr: nestedExpr,\n        vars: [variable, ...nestedVars]\n      };\n    }\n    return {\n      expr,\n      vars: [variable]\n    };\n  };\n  const solveNestedIntegral = (expr, vars, depth = 0) => {\n    if (depth >= vars.length) {\n      return evaluateExpression(expr, {});\n    }\n    const currentVar = vars[depth];\n    const a = 0; // lower bound\n    const b = 1; // upper bound\n\n    const f = x => {\n      const result = solveNestedIntegral(expr, vars, depth + 1);\n      return evaluateExpression(expr, {\n        [currentVar]: x\n      });\n    };\n    return numericalIntegration(f, a, b);\n  };\n  const solveIntegral = equation => {\n    try {\n      const parts = equation.split('*').map(part => part.trim());\n      const results = parts.map(part => {\n        const {\n          expr,\n          vars\n        } = parseIntegral(part);\n        const result = solveNestedIntegral(expr, vars);\n        return {\n          part,\n          result,\n          order: vars.length\n        };\n      });\n      const finalResult = results.reduce((acc, curr) => acc * curr.result, 1);\n      setState(prev => ({\n        ...prev,\n        result: `Result = ${finalResult.toFixed(6)}\\n\\nDetails:\\n${results.map(({\n          part,\n          result,\n          order\n        }) => `${part} (${order}-fold integral) = ${result.toFixed(6)}`).join('\\n')}`,\n        history: [...prev.history, `Solved multiple integrals: ${equation}`]\n      }));\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        result: `Error: ${error instanceof Error ? error.message : 'Invalid integral format'}`\n      }));\n    }\n  };\n  const solveDifferentialEquation = (equation, returnPoints = false) => {\n    try {\n      const h = 0.1;\n      const steps = 100;\n      const results = [];\n      let x = 0;\n      let y = 1;\n      const equationFunc = (x, y) => {\n        const expr = equation.replace('dy/dx', '').replace('=', '').trim();\n        const result = math.evaluate(expr, {\n          x,\n          y\n        });\n        return typeof result === 'number' ? result : 0;\n      };\n      for (let i = 0; i <= steps; i++) {\n        results.push({\n          x,\n          y\n        });\n        const dy = equationFunc(x, y);\n        y += h * dy;\n        x += h;\n      }\n      if (returnPoints) {\n        return results;\n      }\n      setState(prev => ({\n        ...prev,\n        result: JSON.stringify(results, null, 2),\n        history: [...prev.history, `${equation} solved numerically`]\n      }));\n      return [];\n    } catch (error) {\n      if (!returnPoints) {\n        setState(prev => ({\n          ...prev,\n          result: `Error: ${error instanceof Error ? error.message : 'Invalid equation format'}`\n        }));\n      }\n      return [];\n    }\n  };\n  const handleSolve = () => {\n    if (!state.input.trim()) {\n      setState(prev => ({\n        ...prev,\n        error: 'Error: Please enter an equation'\n      }));\n      return;\n    }\n    setState(prev => ({\n      ...prev,\n      isLoading: true\n    }));\n    try {\n      if (state.input.includes('∫')) {\n        solveIntegral(state.input);\n      } else if (state.input.toLowerCase().includes('dy/dx')) {\n        solveDifferentialEquation(state.input);\n      } else {\n        const result = math.evaluate(state.input);\n        const formattedResult = Math.abs(result) < 1e-10 ? 0 : result;\n        setState(prev => ({\n          ...prev,\n          result: formattedResult.toString(),\n          history: [...prev.history, `${state.input} = ${formattedResult}`],\n          isLoading: false\n        }));\n      }\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        result: `Error: ${error instanceof Error ? error.message : 'Invalid expression'}`,\n        isLoading: false,\n        error: error instanceof Error ? error.message : 'Invalid expression'\n      }));\n    }\n  };\n  const handleSymbolClick = symbol => {\n    const input = inputRef.current;\n    if (input) {\n      const start = input.selectionStart || 0;\n      const end = input.selectionEnd || 0;\n      const newValue = state.input.substring(0, start) + symbol + state.input.substring(end);\n      setState(prev => ({\n        ...prev,\n        input: newValue\n      }));\n      setTimeout(() => {\n        const newPosition = start + symbol.length;\n        input.setSelectionRange(newPosition, newPosition);\n        input.focus();\n      }, 0);\n    }\n  };\n  const generateGraphData = () => {\n    try {\n      const xValues = [];\n      const yValues = [];\n\n      // Generate more points for smoother curves\n      for (let x = -10; x <= 10; x += 0.1) {\n        xValues.push(x);\n        let y = null;\n        if (state.input.includes('∫')) {\n          const {\n            expr\n          } = parseIntegral(state.input);\n          y = evaluateExpression(expr, {\n            x\n          });\n        } else if (state.input.toLowerCase().includes('dy/dx')) {\n          const results = solveDifferentialEquation(state.input, true);\n          const point = results.find(p => Math.abs(p.x - x) < 0.1);\n          y = point ? point.y : null;\n        } else {\n          try {\n            const processedInput = state.input.replace(/sin\\(/g, 'math.sin(').replace(/cos\\(/g, 'math.cos(').replace(/tan\\(/g, 'math.tan(').replace(/cot\\(/g, 'math.cot(').replace(/sec\\(/g, 'math.sec(').replace(/csc\\(/g, 'math.csc(');\n            y = math.evaluate(processedInput, {\n              x,\n              math\n            });\n          } catch {\n            y = null;\n          }\n        }\n        if (y !== null && !isNaN(y) && isFinite(y)) {\n          yValues.push(y);\n        } else {\n          yValues.push(null);\n        }\n      }\n      return {\n        labels: xValues,\n        datasets: [{\n          label: state.input,\n          data: yValues.map((y, i) => ({\n            x: xValues[i],\n            y\n          })),\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1,\n          pointRadius: 0,\n          spanGaps: true\n        }]\n      };\n    } catch {\n      return null;\n    }\n  };\n  const graphOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'linear',\n        position: 'center',\n        title: {\n          display: true,\n          text: 'x'\n        },\n        ticks: {\n          stepSize: 1\n        },\n        grid: {\n          display: true,\n          color: '#ddd'\n        }\n      },\n      y: {\n        type: 'linear',\n        position: 'center',\n        title: {\n          display: true,\n          text: 'y'\n        },\n        ticks: {\n          stepSize: 1\n        },\n        grid: {\n          display: true,\n          color: '#ddd'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"vh-100 p-3 d-flex bg-light\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"g-4 flex-grow-1 justify-content-center align-items-center\",\n      style: {\n        maxWidth: '200vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"aspect-ratio-1x1\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100 border-0 shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"d-flex flex-column p-4\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"flex-grow-1 d-flex flex-column gap-4\",\n              onSubmit: e => {\n                e.preventDefault();\n                handleSolve();\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Enter mathematical expression\",\n                  value: state.input,\n                  onChange: handleInputChange,\n                  ref: inputRef,\n                  className: \"calculator-input\",\n                  isInvalid: !!state.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this), state.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-feedback\",\n                  children: state.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"symbol-keyboard\",\n                children: /*#__PURE__*/_jsxDEV(SymbolKeyboard, {\n                  onSymbolClick: handleSymbolClick\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  onClick: handleSolve,\n                  disabled: state.isLoading,\n                  className: \"calculator-button\",\n                  children: state.isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                      animation: \"border\",\n                      size: \"sm\",\n                      className: \"me-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 25\n                    }, this), \"Calculating...\"]\n                  }, void 0, true) : 'Solve'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"flex-grow-1\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-area h-100\",\n                  children: state.result\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"aspect-ratio-1x1\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100 border-0 shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"graph-container h-100\",\n              children: state.input && /*#__PURE__*/_jsxDEV(Line, {\n                data: generateGraphData() || {\n                  labels: [],\n                  datasets: []\n                },\n                options: {\n                  responsive: true,\n                  maintainAspectRatio: true,\n                  aspectRatio: 1,\n                  plugins: {\n                    legend: {\n                      position: 'top',\n                      labels: {\n                        font: {\n                          size: 14\n                        }\n                      }\n                    },\n                    title: {\n                      display: true,\n                      text: 'Function Graph',\n                      font: {\n                        size: 16,\n                        weight: 'bold'\n                      }\n                    }\n                  },\n                  scales: {\n                    x: {\n                      type: 'linear',\n                      position: 'center',\n                      grid: {\n                        color: '#ddd'\n                      },\n                      title: {\n                        display: true,\n                        text: 'X Axis'\n                      }\n                    },\n                    y: {\n                      type: 'linear',\n                      position: 'center',\n                      grid: {\n                        color: '#ddd'\n                      },\n                      title: {\n                        display: true,\n                        text: 'Y Axis'\n                      }\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"ODxVO/0LJmisGZyR8G+3ukZvoc4=\");\n_c = Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","useRef","Container","Form","Button","Card","Row","Col","Spinner","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","math","SymbolKeyboard","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Calculator","_s","state","setState","input","result","history","error","undefined","isLoading","inputRef","handleInputChange","event","prev","target","value","evaluateExpression","expr","variables","evaluate","e","pi","err","Error","numericalIntegration","f","a","b","n","h","sum","i","x","parseIntegral","equation","integralRegex","matches","Array","from","matchAll","length","trim","variable","toLowerCase","remainingExpr","replace","nestedExpr","vars","nestedVars","solveNestedIntegral","depth","currentVar","solveIntegral","parts","split","map","part","results","order","finalResult","reduce","acc","curr","toFixed","join","message","solveDifferentialEquation","returnPoints","steps","y","equationFunc","push","dy","JSON","stringify","handleSolve","includes","formattedResult","Math","abs","toString","handleSymbolClick","symbol","current","start","selectionStart","end","selectionEnd","newValue","substring","setTimeout","newPosition","setSelectionRange","focus","generateGraphData","xValues","yValues","point","find","p","processedInput","isNaN","isFinite","labels","datasets","label","data","borderColor","tension","pointRadius","spanGaps","graphOptions","responsive","maintainAspectRatio","scales","type","position","title","display","text","ticks","stepSize","grid","color","plugins","legend","fluid","className","children","style","maxWidth","md","Body","onSubmit","preventDefault","Group","Control","placeholder","onChange","ref","isInvalid","fileName","_jsxFileName","lineNumber","columnNumber","onSymbolClick","variant","onClick","disabled","animation","size","options","aspectRatio","font","weight","_c","$RefreshReg$"],"sources":["C:/Users/ddas0/OneDrive/Desktop/AI Calc/src/components/Calculator.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Container, Form, Button, Card, Row, Col, Spinner } from 'react-bootstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport * as math from 'mathjs';\r\nimport { SymbolKeyboard } from './SymbolKeyboard';\r\nimport './Calculator.css';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface CalculatorState {\r\n  input: string;\r\n  result: string;\r\n  history: string[];\r\n  error?: string;\r\n  isLoading: boolean;\r\n}\r\n\r\ninterface DifferentialEquationPoint {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface GraphDataPoint {\r\n  x: number;\r\n  y: number | null;\r\n}\r\n\r\nexport const Calculator: React.FC = () => {\r\n  const [state, setState] = useState<CalculatorState>({\r\n    input: '',\r\n    result: '',\r\n    history: [],\r\n    error: undefined,\r\n    isLoading: false\r\n  });\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      input: event.target.value,\r\n      error: undefined\r\n    }));\r\n  };\r\n\r\n  const evaluateExpression = (expr: string, variables: Record<string, number>): number => {\r\n    try {\r\n      return math.evaluate(expr, { ...variables, e: math.e, pi: math.pi });\r\n    } catch (err) {\r\n      throw new Error(`Invalid expression: ${expr}`);\r\n    }\r\n  };\r\n\r\n  const numericalIntegration = (f: (x: number) => number, a: number, b: number): number => {\r\n    const n = 1000; // number of intervals\r\n    const h = (b - a) / n;\r\n    \r\n    let sum = f(a) + f(b);\r\n    for (let i = 1; i < n; i++) {\r\n      const x = a + i * h;\r\n      sum += 2 * f(x);\r\n    }\r\n    for (let i = 1; i < n; i++) {\r\n      const x = a + (i - 0.5) * h;\r\n      sum += 4 * f(x);\r\n    }\r\n    return (h / 6) * sum;\r\n  };\r\n\r\n  const parseIntegral = (equation: string): { expr: string, vars: string[] } => {\r\n    const integralRegex = /∫\\s*([^d]*)\\s*d([a-z])/gi;\r\n    const matches = Array.from(equation.matchAll(integralRegex));\r\n    \r\n    if (matches.length === 0) {\r\n      throw new Error('No valid integral found');\r\n    }\r\n\r\n    const expr = matches[0][1].trim();\r\n    const variable = matches[0][2].toLowerCase();\r\n    const remainingExpr = equation.replace(matches[0][0], expr);\r\n\r\n    if (matches.length > 1) {\r\n      const { expr: nestedExpr, vars: nestedVars } = parseIntegral(remainingExpr);\r\n      return {\r\n        expr: nestedExpr,\r\n        vars: [variable, ...nestedVars]\r\n      };\r\n    }\r\n\r\n    return { expr, vars: [variable] };\r\n  };\r\n\r\n  const solveNestedIntegral = (expr: string, vars: string[], depth: number = 0): number => {\r\n    if (depth >= vars.length) {\r\n      return evaluateExpression(expr, {});\r\n    }\r\n\r\n    const currentVar = vars[depth];\r\n    const a = 0; // lower bound\r\n    const b = 1; // upper bound\r\n\r\n    const f = (x: number) => {\r\n      const result = solveNestedIntegral(expr, vars, depth + 1);\r\n      return evaluateExpression(expr, { [currentVar]: x });\r\n    };\r\n\r\n    return numericalIntegration(f, a, b);\r\n  };\r\n\r\n  const solveIntegral = (equation: string) => {\r\n    try {\r\n      const parts = equation.split('*').map(part => part.trim());\r\n      const results = parts.map(part => {\r\n        const { expr, vars } = parseIntegral(part);\r\n        const result = solveNestedIntegral(expr, vars);\r\n        return { part, result, order: vars.length };\r\n      });\r\n\r\n      const finalResult = results.reduce((acc, curr) => acc * curr.result, 1);\r\n\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: `Result = ${finalResult.toFixed(6)}\\n\\nDetails:\\n${results.map(({ part, result, order }) => \r\n          `${part} (${order}-fold integral) = ${result.toFixed(6)}`\r\n        ).join('\\n')}`,\r\n        history: [...prev.history, `Solved multiple integrals: ${equation}`]\r\n      }));\r\n    } catch (error) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: `Error: ${error instanceof Error ? error.message : 'Invalid integral format'}`\r\n      }));\r\n    }\r\n  };\r\n\r\n  const solveDifferentialEquation = (equation: string, returnPoints: boolean = false) => {\r\n    try {\r\n      const h = 0.1;\r\n      const steps = 100;\r\n      const results: DifferentialEquationPoint[] = [];\r\n      let x = 0;\r\n      let y = 1;\r\n\r\n      const equationFunc = (x: number, y: number): number => {\r\n        const expr = equation\r\n          .replace('dy/dx', '')\r\n          .replace('=', '')\r\n          .trim();\r\n        const result = math.evaluate(expr, { x, y });\r\n        return typeof result === 'number' ? result : 0;\r\n      };\r\n\r\n      for (let i = 0; i <= steps; i++) {\r\n        results.push({ x, y });\r\n        const dy = equationFunc(x, y);\r\n        y += h * dy;\r\n        x += h;\r\n      }\r\n\r\n      if (returnPoints) {\r\n        return results;\r\n      }\r\n\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: JSON.stringify(results, null, 2),\r\n        history: [...prev.history, `${equation} solved numerically`]\r\n      }));\r\n      return [];\r\n    } catch (error) {\r\n      if (!returnPoints) {\r\n        setState(prev => ({\r\n          ...prev,\r\n          result: `Error: ${error instanceof Error ? error.message : 'Invalid equation format'}`\r\n        }));\r\n      }\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const handleSolve = () => {\r\n    if (!state.input.trim()) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        error: 'Error: Please enter an equation'\r\n      }));\r\n      return;\r\n    }\r\n\r\n    setState(prev => ({ ...prev, isLoading: true }));\r\n\r\n    try {\r\n      if (state.input.includes('∫')) {\r\n        solveIntegral(state.input);\r\n      } else if (state.input.toLowerCase().includes('dy/dx')) {\r\n        solveDifferentialEquation(state.input);\r\n      } else {\r\n        const result = math.evaluate(state.input);\r\n        const formattedResult = Math.abs(result) < 1e-10 ? 0 : result;\r\n        setState(prev => ({\r\n          ...prev,\r\n          result: formattedResult.toString(),\r\n          history: [...prev.history, `${state.input} = ${formattedResult}`],\r\n          isLoading: false\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: `Error: ${error instanceof Error ? error.message : 'Invalid expression'}`,\r\n        isLoading: false,\r\n        error: error instanceof Error ? error.message : 'Invalid expression'\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSymbolClick = (symbol: string) => {\r\n    const input = inputRef.current;\r\n    if (input) {\r\n      const start = input.selectionStart || 0;\r\n      const end = input.selectionEnd || 0;\r\n      const newValue = state.input.substring(0, start) + symbol + state.input.substring(end);\r\n      setState(prev => ({\r\n        ...prev,\r\n        input: newValue\r\n      }));\r\n      setTimeout(() => {\r\n        const newPosition = start + symbol.length;\r\n        input.setSelectionRange(newPosition, newPosition);\r\n        input.focus();\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  const generateGraphData = () => {\r\n    try {\r\n      const xValues: number[] = [];\r\n      const yValues: (number | null)[] = [];\r\n      \r\n      // Generate more points for smoother curves\r\n      for (let x = -10; x <= 10; x += 0.1) {\r\n        xValues.push(x);\r\n        let y: number | null = null;\r\n        \r\n        if (state.input.includes('∫')) {\r\n          const { expr } = parseIntegral(state.input);\r\n          y = evaluateExpression(expr, { x });\r\n        } else if (state.input.toLowerCase().includes('dy/dx')) {\r\n          const results = solveDifferentialEquation(state.input, true);\r\n          const point = results.find(p => Math.abs(p.x - x) < 0.1);\r\n          y = point ? point.y : null;\r\n        } else {\r\n          try {\r\n            const processedInput = state.input\r\n              .replace(/sin\\(/g, 'math.sin(')\r\n              .replace(/cos\\(/g, 'math.cos(')\r\n              .replace(/tan\\(/g, 'math.tan(')\r\n              .replace(/cot\\(/g, 'math.cot(')\r\n              .replace(/sec\\(/g, 'math.sec(')\r\n              .replace(/csc\\(/g, 'math.csc(');\r\n            y = math.evaluate(processedInput, { x, math });\r\n          } catch {\r\n            y = null;\r\n          }\r\n        }\r\n        \r\n        if (y !== null && !isNaN(y) && isFinite(y)) {\r\n          yValues.push(y);\r\n        } else {\r\n          yValues.push(null);\r\n        }\r\n      }\r\n\r\n      return {\r\n        labels: xValues,\r\n        datasets: [\r\n          {\r\n            label: state.input,\r\n            data: yValues.map((y, i) => ({ x: xValues[i], y })),\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            tension: 0.1,\r\n            pointRadius: 0,\r\n            spanGaps: true\r\n          }\r\n        ]\r\n      };\r\n    } catch {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const graphOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: {\r\n        type: 'linear' as const,\r\n        position: 'center' as const,\r\n        title: {\r\n          display: true,\r\n          text: 'x'\r\n        },\r\n        ticks: {\r\n          stepSize: 1\r\n        },\r\n        grid: {\r\n          display: true,\r\n          color: '#ddd'\r\n        }\r\n      },\r\n      y: {\r\n        type: 'linear' as const,\r\n        position: 'center' as const,\r\n        title: {\r\n          display: true,\r\n          text: 'y'\r\n        },\r\n        ticks: {\r\n          stepSize: 1\r\n        },\r\n        grid: {\r\n          display: true,\r\n          color: '#ddd'\r\n        }\r\n      }\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top' as const\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"vh-100 p-3 d-flex bg-light\">\r\n      <Row className=\"g-4 flex-grow-1 justify-content-center align-items-center\" style={{ maxWidth: '200vh' }}>\r\n        <Col md={6} className=\"aspect-ratio-1x1\">\r\n          <Card className=\"h-100 border-0 shadow-sm\">\r\n            <Card.Body className=\"d-flex flex-column p-4\">\r\n              <Form className=\"flex-grow-1 d-flex flex-column gap-4\" onSubmit={e => { e.preventDefault(); handleSolve(); }}>\r\n                <Form.Group>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter mathematical expression\"\r\n                    value={state.input}\r\n                    onChange={handleInputChange}\r\n                    ref={inputRef}\r\n                    className=\"calculator-input\"\r\n                    isInvalid={!!state.error}\r\n                  />\r\n                  {state.error && (\r\n                    <div className=\"error-feedback\">{state.error}</div>\r\n                  )}\r\n                </Form.Group>\r\n\r\n                <div className=\"symbol-keyboard\">\r\n                  <SymbolKeyboard onSymbolClick={handleSymbolClick} />\r\n                </div>\r\n\r\n                <div className=\"d-grid\">\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={handleSolve}\r\n                    disabled={state.isLoading}\r\n                    className=\"calculator-button\"\r\n                  >\r\n                    {state.isLoading ? (\r\n                      <>\r\n                        <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n                        Calculating...\r\n                      </>\r\n                    ) : (\r\n                      'Solve'\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n\r\n                <Form.Group className=\"flex-grow-1\">\r\n                  <div className=\"result-area h-100\">\r\n                    {state.result}\r\n                  </div>\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={6} className=\"aspect-ratio-1x1\">\r\n          <Card className=\"h-100 border-0 shadow-sm\">\r\n            <Card.Body className=\"p-4\">\r\n              <div className=\"graph-container h-100\">\r\n                {state.input && (\r\n                  <Line\r\n                    data={generateGraphData() || { labels: [], datasets: [] }}\r\n                    options={{\r\n                      responsive: true,\r\n                      maintainAspectRatio: true,\r\n                      aspectRatio: 1,\r\n                      plugins: {\r\n                        legend: {\r\n                          position: 'top' as const,\r\n                          labels: {\r\n                            font: {\r\n                              size: 14\r\n                            }\r\n                          }\r\n                        },\r\n                        title: {\r\n                          display: true,\r\n                          text: 'Function Graph',\r\n                          font: {\r\n                            size: 16,\r\n                            weight: 'bold'\r\n                          }\r\n                        }\r\n                      },\r\n                      scales: {\r\n                        x: {\r\n                          type: 'linear',\r\n                          position: 'center',\r\n                          grid: { color: '#ddd' },\r\n                          title: {\r\n                            display: true,\r\n                            text: 'X Axis'\r\n                          }\r\n                        },\r\n                        y: {\r\n                          type: 'linear',\r\n                          position: 'center',\r\n                          grid: { color: '#ddd' },\r\n                          title: {\r\n                            display: true,\r\n                            text: 'Y Axis'\r\n                          }\r\n                        }\r\n                      }\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}