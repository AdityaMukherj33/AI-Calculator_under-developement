{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddas0\\\\OneDrive\\\\Desktop\\\\AI Calc\\\\src\\\\components\\\\Calculator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Container, Form, Button, Card, Row, Col } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport * as math from 'mathjs';\nimport { SymbolKeyboard } from './SymbolKeyboard';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const Calculator = () => {\n  _s();\n  const [state, setState] = useState({\n    input: '',\n    result: '',\n    history: []\n  });\n  const inputRef = useRef(null);\n  const handleInputChange = event => {\n    setState(prev => ({\n      ...prev,\n      input: event.target.value\n    }));\n  };\n  const generateGraphData = () => {\n    try {\n      const xValues = [];\n      const yValues = [];\n\n      // Generate more points for smoother curves\n      for (let x = -10; x <= 10; x += 0.1) {\n        xValues.push(x);\n        let y;\n        if (state.input.includes('âˆ«')) {\n          const {\n            expr\n          } = parseIntegral(state.input);\n          y = evaluateExpression(expr, {\n            x\n          });\n        } else if (state.input.toLowerCase().includes('dy/dx')) {\n          const results = solveDifferentialEquation(state.input, true);\n          const point = results.find(p => Math.abs(p.x - x) < 0.1);\n          y = point ? point.y : null;\n        } else {\n          try {\n            // Replace common trig function names with math.js equivalents\n            const processedInput = state.input.replace(/sin\\(/g, 'math.sin(').replace(/cos\\(/g, 'math.cos(').replace(/tan\\(/g, 'math.tan(').replace(/cot\\(/g, 'math.cot(').replace(/sec\\(/g, 'math.sec(').replace(/csc\\(/g, 'math.csc(');\n            y = math.evaluate(processedInput, {\n              x,\n              math\n            });\n          } catch {\n            y = null;\n          }\n        }\n        if (y !== null && !isNaN(y) && isFinite(y)) {\n          yValues.push(y);\n        } else {\n          yValues.push(null);\n        }\n      }\n      return {\n        labels: xValues,\n        datasets: [{\n          label: state.input,\n          data: yValues.map((y, i) => ({\n            x: xValues[i],\n            y\n          })),\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1,\n          pointRadius: 0,\n          // Hide points for smoother lines\n          spanGaps: true // Connect points across gaps (undefined values)\n        }]\n      };\n    } catch {\n      return null;\n    }\n  };\n  const graphOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'linear',\n        position: 'center',\n        title: {\n          display: true,\n          text: 'x'\n        },\n        ticks: {\n          stepSize: 1\n        },\n        grid: {\n          display: true,\n          color: '#ddd'\n        }\n      },\n      y: {\n        type: 'linear',\n        position: 'center',\n        title: {\n          display: true,\n          text: 'y'\n        },\n        ticks: {\n          stepSize: 1\n        },\n        grid: {\n          display: true,\n          color: '#ddd'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"py-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Enter mathematical expression or differential equation\",\n                  value: state.input,\n                  onChange: handleInputChange,\n                  onKeyPress: e => {\n                    if (e.key === 'Enter') {\n                      handleSolve();\n                    }\n                  },\n                  ref: inputRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(SymbolKeyboard, {\n                  onSymbolClick: handleSymbolClick\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2 mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"lg\",\n                  onClick: handleSolve,\n                  children: \"Solve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: 4,\n                  value: state.result,\n                  readOnly: true,\n                  className: \"bg-light\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-sm h-100\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '500px',\n                width: '100%'\n              },\n              children: state.input && /*#__PURE__*/_jsxDEV(Line, {\n                data: generateGraphData() || {\n                  labels: [],\n                  datasets: []\n                },\n                options: graphOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n// Update solveDifferentialEquation to optionally return points\n_s(Calculator, \"R20Vvb3rx4ui6wjqCSnIvn88evA=\");\n_c = Calculator;\nconst solveDifferentialEquation = (equation, returnPoints = false) => {\n  try {\n    const h = 0.1;\n    const steps = 100;\n    const results = [];\n    let x = 0;\n    let y = 1;\n    const equationFunc = (x, y) => {\n      const expr = equation.replace('dy/dx', '').replace('=', '').trim();\n      const result = math.evaluate(expr, {\n        x,\n        y\n      });\n      return typeof result === 'number' ? result : 0;\n    };\n    for (let i = 0; i <= steps; i++) {\n      results.push({\n        x,\n        y\n      });\n      const dy = equationFunc(x, y);\n      y += h * dy;\n      x += h;\n    }\n    if (returnPoints) {\n      return results;\n    }\n    setState(prev => ({\n      ...prev,\n      result: JSON.stringify(results, null, 2),\n      history: [...prev.history, `${equation} solved numerically`]\n    }));\n  } catch (error) {\n    if (!returnPoints) {\n      setState(prev => ({\n        ...prev,\n        result: `Error: ${error instanceof Error ? error.message : 'Invalid equation format'}`\n      }));\n    }\n    return [];\n  }\n  return [];\n};\nconst graphOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    x: {\n      title: {\n        display: true,\n        text: 'x'\n      },\n      ticks: {\n        stepSize: 1\n      },\n      grid: {\n        display: true\n      }\n    },\n    y: {\n      title: {\n        display: true,\n        text: 'y'\n      },\n      ticks: {\n        stepSize: 1\n      },\n      grid: {\n        display: true\n      }\n    }\n  }\n};\nconst evaluateExpression = (expr, variables) => {\n  try {\n    return math.evaluate(expr, {\n      ...variables,\n      e: math.e,\n      pi: math.pi\n    });\n  } catch (err) {\n    throw new Error(`Invalid expression: ${expr}`);\n  }\n};\nconst numericalIntegration = (f, a, b) => {\n  const n = 1000; // number of intervals\n  const h = (b - a) / n;\n  let sum = f(a) + f(b);\n  for (let i = 1; i < n; i++) {\n    const x = a + i * h;\n    sum += 2 * f(x);\n  }\n  for (let i = 1; i < n; i++) {\n    const x = a + (i - 0.5) * h;\n    sum += 4 * f(x);\n  }\n  return h / 6 * sum;\n};\nconst parseIntegral = equation => {\n  const integralRegex = /âˆ«\\s*([^d]*)\\s*d([a-z])/gi;\n  const matches = Array.from(equation.matchAll(integralRegex));\n  if (matches.length === 0) {\n    throw new Error('No valid integral found');\n  }\n  const expr = matches[0][1].trim();\n  const variable = matches[0][2].toLowerCase();\n  const remainingExpr = equation.replace(matches[0][0], expr);\n  if (matches.length > 1) {\n    const {\n      expr: nestedExpr,\n      vars: nestedVars\n    } = parseIntegral(remainingExpr);\n    return {\n      expr: nestedExpr,\n      vars: [variable, ...nestedVars]\n    };\n  }\n  return {\n    expr,\n    vars: [variable]\n  };\n};\nconst solveNestedIntegral = (expr, vars, depth = 0) => {\n  if (depth >= vars.length) {\n    return evaluateExpression(expr, {});\n  }\n  const currentVar = vars[depth];\n  const a = 0; // lower bound\n  const b = 1; // upper bound\n\n  const f = x => {\n    const result = solveNestedIntegral(expr, vars, depth + 1);\n    return evaluateExpression(expr, {\n      [currentVar]: x\n    });\n  };\n  return numericalIntegration(f, a, b);\n};\nconst solveIntegral = equation => {\n  try {\n    // Split multiple integrals if they exist\n    const parts = equation.split('*').map(part => part.trim());\n    const results = parts.map(part => {\n      const {\n        expr,\n        vars\n      } = parseIntegral(part);\n      const result = solveNestedIntegral(expr, vars);\n      return {\n        part,\n        result,\n        order: vars.length\n      };\n    });\n\n    // Multiply results if there are multiple integrals\n    const finalResult = results.reduce((acc, curr) => acc * curr.result, 1);\n    setState(prev => ({\n      ...prev,\n      result: `Result = ${finalResult.toFixed(6)}\\n\\nDetails:\\n${results.map(({\n        part,\n        result,\n        order\n      }) => `${part} (${order}-fold integral) = ${result.toFixed(6)}`).join('\\n')}`,\n      history: [...prev.history, `Solved multiple integrals: ${equation}`]\n    }));\n  } catch (error) {\n    setState(prev => ({\n      ...prev,\n      result: `Error: ${error instanceof Error ? error.message : 'Invalid integral format'}`\n    }));\n  }\n};\nconst handleSolve = () => {\n  if (!state.input.trim()) {\n    setState(prev => ({\n      ...prev,\n      result: 'Error: Please enter an equation'\n    }));\n    return;\n  }\n  try {\n    if (state.input.includes('âˆ«')) {\n      solveIntegral(state.input);\n    } else if (state.input.toLowerCase().includes('dy/dx')) {\n      solveDifferentialEquation(state.input);\n    } else {\n      const result = math.evaluate(state.input);\n      // Handle near-zero values (floating point precision)\n      const formattedResult = Math.abs(result) < 1e-10 ? 0 : result;\n      setState(prev => ({\n        ...prev,\n        result: formattedResult.toString(),\n        history: [...prev.history, `${state.input} = ${formattedResult}`]\n      }));\n    }\n  } catch (error) {\n    setState(prev => ({\n      ...prev,\n      result: `Error: ${error instanceof Error ? error.message : 'Invalid expression'}`\n    }));\n  }\n};\nconst handleSymbolClick = symbol => {\n  const input = inputRef.current;\n  if (input) {\n    const start = input.selectionStart || 0;\n    const end = input.selectionEnd || 0;\n    const newValue = state.input.substring(0, start) + symbol + state.input.substring(end);\n    setState(prev => ({\n      ...prev,\n      input: newValue\n    }));\n    // Set cursor position after inserted symbol\n    setTimeout(() => {\n      const newPosition = start + symbol.length;\n      input.setSelectionRange(newPosition, newPosition);\n      input.focus();\n    }, 0);\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","useRef","Container","Form","Button","Card","Row","Col","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","math","SymbolKeyboard","jsxDEV","_jsxDEV","register","Calculator","_s","state","setState","input","result","history","inputRef","handleInputChange","event","prev","target","value","generateGraphData","xValues","yValues","x","push","y","includes","expr","parseIntegral","evaluateExpression","toLowerCase","results","solveDifferentialEquation","point","find","p","Math","abs","processedInput","replace","evaluate","isNaN","isFinite","labels","datasets","label","data","map","i","borderColor","tension","pointRadius","spanGaps","graphOptions","responsive","maintainAspectRatio","scales","type","position","title","display","text","ticks","stepSize","grid","color","plugins","legend","fluid","className","children","md","Body","Group","Control","placeholder","onChange","onKeyPress","e","key","handleSolve","ref","fileName","_jsxFileName","lineNumber","columnNumber","onSymbolClick","handleSymbolClick","variant","size","onClick","as","rows","readOnly","style","height","width","options","_c","equation","returnPoints","h","steps","equationFunc","trim","dy","JSON","stringify","error","Error","message","variables","pi","err","numericalIntegration","f","a","b","n","sum","integralRegex","matches","Array","from","matchAll","length","variable","remainingExpr","nestedExpr","vars","nestedVars","solveNestedIntegral","depth","currentVar","solveIntegral","parts","split","part","order","finalResult","reduce","acc","curr","toFixed","join","formattedResult","toString","symbol","current","start","selectionStart","end","selectionEnd","newValue","substring","setTimeout","newPosition","setSelectionRange","focus","$RefreshReg$"],"sources":["C:/Users/ddas0/OneDrive/Desktop/AI Calc/src/components/Calculator.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Container, Form, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport * as math from 'mathjs';\r\nimport { SymbolKeyboard } from './SymbolKeyboard';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface CalculatorState {\r\n  input: string;\r\n  result: string;\r\n  history: string[];\r\n}\r\n\r\ninterface DifferentialEquationPoint {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport const Calculator: React.FC = () => {\r\n  const [state, setState] = useState<CalculatorState>({\r\n    input: '',\r\n    result: '',\r\n    history: []\r\n  });\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      input: event.target.value\r\n    }));\r\n  };\r\n\r\n  const generateGraphData = () => {\r\n    try {\r\n      const xValues = [];\r\n      const yValues = [];\r\n      \r\n      // Generate more points for smoother curves\r\n      for (let x = -10; x <= 10; x += 0.1) {\r\n        xValues.push(x);\r\n        let y;\r\n        \r\n        if (state.input.includes('âˆ«')) {\r\n          const { expr } = parseIntegral(state.input);\r\n          y = evaluateExpression(expr, { x });\r\n        } else if (state.input.toLowerCase().includes('dy/dx')) {\r\n          const results = solveDifferentialEquation(state.input, true);\r\n          const point = results.find(p => Math.abs(p.x - x) < 0.1);\r\n          y = point ? point.y : null;\r\n        } else {\r\n          try {\r\n            // Replace common trig function names with math.js equivalents\r\n            const processedInput = state.input\r\n              .replace(/sin\\(/g, 'math.sin(')\r\n              .replace(/cos\\(/g, 'math.cos(')\r\n              .replace(/tan\\(/g, 'math.tan(')\r\n              .replace(/cot\\(/g, 'math.cot(')\r\n              .replace(/sec\\(/g, 'math.sec(')\r\n              .replace(/csc\\(/g, 'math.csc(');\r\n            y = math.evaluate(processedInput, { x, math });\r\n          } catch {\r\n            y = null;\r\n          }\r\n        }\r\n        \r\n        if (y !== null && !isNaN(y) && isFinite(y)) {\r\n          yValues.push(y);\r\n        } else {\r\n          yValues.push(null);\r\n        }\r\n      }\r\n\r\n      return {\r\n        labels: xValues,\r\n        datasets: [\r\n          {\r\n            label: state.input,\r\n            data: yValues.map((y, i) => ({ x: xValues[i], y })),\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            tension: 0.1,\r\n            pointRadius: 0, // Hide points for smoother lines\r\n            spanGaps: true // Connect points across gaps (undefined values)\r\n          }\r\n        ]\r\n      };\r\n    } catch {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const graphOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: {\r\n        type: 'linear',\r\n        position: 'center',\r\n        title: {\r\n          display: true,\r\n          text: 'x'\r\n        },\r\n        ticks: {\r\n          stepSize: 1\r\n        },\r\n        grid: {\r\n          display: true,\r\n          color: '#ddd'\r\n        }\r\n      },\r\n      y: {\r\n        type: 'linear',\r\n        position: 'center',\r\n        title: {\r\n          display: true,\r\n          text: 'y'\r\n        },\r\n        ticks: {\r\n          stepSize: 1\r\n        },\r\n        grid: {\r\n          display: true,\r\n          color: '#ddd'\r\n        }\r\n      }\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top'\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"py-5\">\r\n      <Row>\r\n        <Col md={6}>\r\n          <Card className=\"shadow-sm\">\r\n            <Card.Body>\r\n              <Form>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter mathematical expression or differential equation\"\r\n                    value={state.input}\r\n                    onChange={handleInputChange}\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        handleSolve();\r\n                      }\r\n                    }}\r\n                    ref={inputRef}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <div className=\"mb-3\">\r\n                  <SymbolKeyboard onSymbolClick={handleSymbolClick} />\r\n                </div>\r\n\r\n                <div className=\"d-grid gap-2 mb-3\">\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    onClick={handleSolve}\r\n                  >\r\n                    Solve\r\n                  </Button>\r\n                </div>\r\n\r\n                <Form.Group>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={4}\r\n                    value={state.result}\r\n                    readOnly\r\n                    className=\"bg-light\"\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={6}>\r\n          <Card className=\"shadow-sm h-100\">\r\n            <Card.Body>\r\n              <div style={{ height: '500px', width: '100%' }}>\r\n                {state.input && (\r\n                  <Line\r\n                    data={generateGraphData() || { labels: [], datasets: [] }}\r\n                    options={graphOptions}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\n  // Update solveDifferentialEquation to optionally return points\r\n  const solveDifferentialEquation = (equation: string, returnPoints: boolean = false) => {\r\n    try {\r\n      const h = 0.1;\r\n      const steps = 100;\r\n      const results: DifferentialEquationPoint[] = [];\r\n      let x = 0;\r\n      let y = 1;\r\n\r\n      const equationFunc = (x: number, y: number): number => {\r\n        const expr = equation\r\n          .replace('dy/dx', '')\r\n          .replace('=', '')\r\n          .trim();\r\n        const result = math.evaluate(expr, { x, y });\r\n        return typeof result === 'number' ? result : 0;\r\n      };\r\n\r\n      for (let i = 0; i <= steps; i++) {\r\n        results.push({ x, y });\r\n        const dy = equationFunc(x, y);\r\n        y += h * dy;\r\n        x += h;\r\n      }\r\n\r\n      if (returnPoints) {\r\n        return results;\r\n      }\r\n\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: JSON.stringify(results, null, 2),\r\n        history: [...prev.history, `${equation} solved numerically`]\r\n      }));\r\n    } catch (error) {\r\n      if (!returnPoints) {\r\n        setState(prev => ({\r\n          ...prev,\r\n          result: `Error: ${error instanceof Error ? error.message : 'Invalid equation format'}`\r\n        }));\r\n      }\r\n      return [];\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const graphOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'x'\r\n        },\r\n        ticks: {\r\n          stepSize: 1\r\n        },\r\n        grid: {\r\n          display: true\r\n        }\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'y'\r\n        },\r\n        ticks: {\r\n          stepSize: 1\r\n        },\r\n        grid: {\r\n          display: true\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const evaluateExpression = (expr: string, variables: Record<string, number>): number => {\r\n    try {\r\n      return math.evaluate(expr, { ...variables, e: math.e, pi: math.pi });\r\n    } catch (err) {\r\n      throw new Error(`Invalid expression: ${expr}`);\r\n    }\r\n  };\r\n\r\n  const numericalIntegration = (f: (x: number) => number, a: number, b: number): number => {\r\n    const n = 1000; // number of intervals\r\n    const h = (b - a) / n;\r\n    \r\n    let sum = f(a) + f(b);\r\n    for (let i = 1; i < n; i++) {\r\n      const x = a + i * h;\r\n      sum += 2 * f(x);\r\n    }\r\n    for (let i = 1; i < n; i++) {\r\n      const x = a + (i - 0.5) * h;\r\n      sum += 4 * f(x);\r\n    }\r\n    return (h / 6) * sum;\r\n  };\r\n\r\n  const parseIntegral = (equation: string): { expr: string, vars: string[] } => {\r\n    const integralRegex = /âˆ«\\s*([^d]*)\\s*d([a-z])/gi;\r\n    const matches = Array.from(equation.matchAll(integralRegex));\r\n    \r\n    if (matches.length === 0) {\r\n      throw new Error('No valid integral found');\r\n    }\r\n\r\n    const expr = matches[0][1].trim();\r\n    const variable = matches[0][2].toLowerCase();\r\n    const remainingExpr = equation.replace(matches[0][0], expr);\r\n\r\n    if (matches.length > 1) {\r\n      const { expr: nestedExpr, vars: nestedVars } = parseIntegral(remainingExpr);\r\n      return {\r\n        expr: nestedExpr,\r\n        vars: [variable, ...nestedVars]\r\n      };\r\n    }\r\n\r\n    return { expr, vars: [variable] };\r\n  };\r\n\r\n  const solveNestedIntegral = (expr: string, vars: string[], depth: number = 0): number => {\r\n    if (depth >= vars.length) {\r\n      return evaluateExpression(expr, {});\r\n    }\r\n\r\n    const currentVar = vars[depth];\r\n    const a = 0; // lower bound\r\n    const b = 1; // upper bound\r\n\r\n    const f = (x: number) => {\r\n      const result = solveNestedIntegral(expr, vars, depth + 1);\r\n      return evaluateExpression(expr, { [currentVar]: x });\r\n    };\r\n\r\n    return numericalIntegration(f, a, b);\r\n  };\r\n\r\n  const solveIntegral = (equation: string) => {\r\n    try {\r\n      // Split multiple integrals if they exist\r\n      const parts = equation.split('*').map(part => part.trim());\r\n      const results = parts.map(part => {\r\n        const { expr, vars } = parseIntegral(part);\r\n        const result = solveNestedIntegral(expr, vars);\r\n        return { part, result, order: vars.length };\r\n      });\r\n\r\n      // Multiply results if there are multiple integrals\r\n      const finalResult = results.reduce((acc, curr) => acc * curr.result, 1);\r\n\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: `Result = ${finalResult.toFixed(6)}\\n\\nDetails:\\n${results.map(({ part, result, order }) => \r\n          `${part} (${order}-fold integral) = ${result.toFixed(6)}`\r\n        ).join('\\n')}`,\r\n        history: [...prev.history, `Solved multiple integrals: ${equation}`]\r\n      }));\r\n    } catch (error) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: `Error: ${error instanceof Error ? error.message : 'Invalid integral format'}`\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSolve = () => {\r\n    if (!state.input.trim()) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: 'Error: Please enter an equation'\r\n      }));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (state.input.includes('âˆ«')) {\r\n        solveIntegral(state.input);\r\n      } else if (state.input.toLowerCase().includes('dy/dx')) {\r\n        solveDifferentialEquation(state.input);\r\n      } else {\r\n        const result = math.evaluate(state.input);\r\n        // Handle near-zero values (floating point precision)\r\n        const formattedResult = Math.abs(result) < 1e-10 ? 0 : result;\r\n        setState(prev => ({\r\n          ...prev,\r\n          result: formattedResult.toString(),\r\n          history: [...prev.history, `${state.input} = ${formattedResult}`]\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: `Error: ${error instanceof Error ? error.message : 'Invalid expression'}`\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSymbolClick = (symbol: string) => {\r\n    const input = inputRef.current;\r\n    if (input) {\r\n      const start = input.selectionStart || 0;\r\n      const end = input.selectionEnd || 0;\r\n      const newValue = state.input.substring(0, start) + symbol + state.input.substring(end);\r\n      setState(prev => ({\r\n        ...prev,\r\n        input: newValue\r\n      }));\r\n      // Set cursor position after inserted symbol\r\n      setTimeout(() => {\r\n        const newPosition = start + symbol.length;\r\n        input.setSelectionRange(newPosition, newPosition);\r\n        input.focus();\r\n      }, 0);\r\n    }\r\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}