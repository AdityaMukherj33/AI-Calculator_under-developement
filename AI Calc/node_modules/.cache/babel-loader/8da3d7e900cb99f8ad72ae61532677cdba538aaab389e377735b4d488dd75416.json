{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddas0\\\\OneDrive\\\\Desktop\\\\AI Calc\\\\src\\\\components\\\\Calculator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Container, Form, Button, Card } from 'react-bootstrap';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport * as math from 'mathjs';\nimport { SymbolKeyboard } from './SymbolKeyboard';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const Calculator = () => {\n  _s();\n  const [state, setState] = useState({\n    input: '',\n    result: '',\n    history: []\n  });\n  const inputRef = useRef(null);\n  const handleInputChange = event => {\n    setState(prev => ({\n      ...prev,\n      input: event.target.value\n    }));\n  };\n  const generateGraphData = () => {\n    try {\n      const points = [];\n      const xValues = [];\n      const yValues = [];\n\n      // Generate points with 1 unit spacing\n      for (let x = -10; x <= 10; x += 1) {\n        xValues.push(x);\n        let y;\n        if (state.input.includes('∫')) {\n          // For integrals, show the function being integrated\n          const {\n            expr\n          } = parseIntegral(state.input);\n          y = evaluateExpression(expr, {\n            x\n          });\n        } else if (state.input.toLowerCase().includes('dy/dx')) {\n          // For differential equations, show the solution curve\n          const results = solveDifferentialEquation(state.input, true);\n          const point = results.find(p => Math.abs(p.x - x) < 0.1);\n          y = point ? point.y : null;\n        } else {\n          // For regular expressions\n          try {\n            y = math.evaluate(state.input, {\n              x\n            });\n          } catch {\n            y = null;\n          }\n        }\n        if (y !== null) {\n          yValues.push(y);\n        }\n      }\n      return {\n        labels: xValues,\n        datasets: [{\n          label: state.input,\n          data: yValues,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      };\n    } catch {\n      return null;\n    }\n  };\n\n  // Update solveDifferentialEquation to optionally return points\n  const solveDifferentialEquation = (equation, returnPoints = false) => {\n    try {\n      const h = 0.1;\n      const steps = 100;\n      const results = [];\n      let x = 0;\n      let y = 1;\n      const equationFunc = (x, y) => {\n        const expr = equation.replace('dy/dx', '').replace('=', '').trim();\n        const result = math.evaluate(expr, {\n          x,\n          y\n        });\n        return typeof result === 'number' ? result : 0;\n      };\n      for (let i = 0; i <= steps; i++) {\n        results.push({\n          x,\n          y\n        });\n        const dy = equationFunc(x, y);\n        y += h * dy;\n        x += h;\n      }\n      if (returnPoints) {\n        return results;\n      }\n      setState(prev => ({\n        ...prev,\n        result: JSON.stringify(results, null, 2),\n        history: [...prev.history, `${equation} solved numerically`]\n      }));\n    } catch (error) {\n      if (!returnPoints) {\n        setState(prev => ({\n          ...prev,\n          result: `Error: ${error instanceof Error ? error.message : 'Invalid equation format'}`\n        }));\n      }\n      return [];\n    }\n    return [];\n  };\n  const graphOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'x'\n        },\n        ticks: {\n          stepSize: 1\n        },\n        grid: {\n          display: true\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'y'\n        },\n        ticks: {\n          stepSize: 1\n        },\n        grid: {\n          display: true\n        }\n      }\n    }\n  };\n  const evaluateExpression = (expr, variables) => {\n    try {\n      return math.evaluate(expr, {\n        ...variables,\n        e: math.e,\n        pi: math.pi\n      });\n    } catch (err) {\n      throw new Error(`Invalid expression: ${expr}`);\n    }\n  };\n  const numericalIntegration = (f, a, b) => {\n    const n = 1000; // number of intervals\n    const h = (b - a) / n;\n    let sum = f(a) + f(b);\n    for (let i = 1; i < n; i++) {\n      const x = a + i * h;\n      sum += 2 * f(x);\n    }\n    for (let i = 1; i < n; i++) {\n      const x = a + (i - 0.5) * h;\n      sum += 4 * f(x);\n    }\n    return h / 6 * sum;\n  };\n  const parseIntegral = equation => {\n    const integralRegex = /∫\\s*([^d]*)\\s*d([a-z])/gi;\n    const matches = Array.from(equation.matchAll(integralRegex));\n    if (matches.length === 0) {\n      throw new Error('No valid integral found');\n    }\n    const expr = matches[0][1].trim();\n    const variable = matches[0][2].toLowerCase();\n    const remainingExpr = equation.replace(matches[0][0], expr);\n    if (matches.length > 1) {\n      const {\n        expr: nestedExpr,\n        vars: nestedVars\n      } = parseIntegral(remainingExpr);\n      return {\n        expr: nestedExpr,\n        vars: [variable, ...nestedVars]\n      };\n    }\n    return {\n      expr,\n      vars: [variable]\n    };\n  };\n  const solveNestedIntegral = (expr, vars, depth = 0) => {\n    if (depth >= vars.length) {\n      return evaluateExpression(expr, {});\n    }\n    const currentVar = vars[depth];\n    const a = 0; // lower bound\n    const b = 1; // upper bound\n\n    const f = x => {\n      const result = solveNestedIntegral(expr, vars, depth + 1);\n      return evaluateExpression(expr, {\n        [currentVar]: x\n      });\n    };\n    return numericalIntegration(f, a, b);\n  };\n  const solveIntegral = equation => {\n    try {\n      // Split multiple integrals if they exist\n      const parts = equation.split('*').map(part => part.trim());\n      const results = parts.map(part => {\n        const {\n          expr,\n          vars\n        } = parseIntegral(part);\n        const result = solveNestedIntegral(expr, vars);\n        return {\n          part,\n          result,\n          order: vars.length\n        };\n      });\n\n      // Multiply results if there are multiple integrals\n      const finalResult = results.reduce((acc, curr) => acc * curr.result, 1);\n      setState(prev => ({\n        ...prev,\n        result: `Result = ${finalResult.toFixed(6)}\\n\\nDetails:\\n${results.map(({\n          part,\n          result,\n          order\n        }) => `${part} (${order}-fold integral) = ${result.toFixed(6)}`).join('\\n')}`,\n        history: [...prev.history, `Solved multiple integrals: ${equation}`]\n      }));\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        result: `Error: ${error instanceof Error ? error.message : 'Invalid integral format'}`\n      }));\n    }\n  };\n  const handleSolve = () => {\n    if (!state.input.trim()) {\n      setState(prev => ({\n        ...prev,\n        result: 'Error: Please enter an equation'\n      }));\n      return;\n    }\n    try {\n      if (state.input.includes('∫')) {\n        solveIntegral(state.input);\n      } else if (state.input.toLowerCase().includes('dy/dx')) {\n        solveDifferentialEquation(state.input);\n      } else {\n        const result = math.evaluate(state.input);\n        // Handle near-zero values (floating point precision)\n        const formattedResult = Math.abs(result) < 1e-10 ? 0 : result;\n        setState(prev => ({\n          ...prev,\n          result: formattedResult.toString(),\n          history: [...prev.history, `${state.input} = ${formattedResult}`]\n        }));\n      }\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        result: `Error: ${error instanceof Error ? error.message : 'Invalid expression'}`\n      }));\n    }\n  };\n  const handleSymbolClick = symbol => {\n    const input = inputRef.current;\n    if (input) {\n      const start = input.selectionStart || 0;\n      const end = input.selectionEnd || 0;\n      const newValue = state.input.substring(0, start) + symbol + state.input.substring(end);\n      setState(prev => ({\n        ...prev,\n        input: newValue\n      }));\n      // Set cursor position after inserted symbol\n      setTimeout(() => {\n        const newPosition = start + symbol.length;\n        input.setSelectionRange(newPosition, newPosition);\n        input.focus();\n      }, 0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-5\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"shadow-sm\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter mathematical expression or differential equation\",\n              value: state.input,\n              onChange: handleInputChange,\n              onKeyPress: e => {\n                if (e.key === 'Enter') {\n                  handleSolve();\n                }\n              },\n              ref: inputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(SymbolKeyboard, {\n              onSymbolClick: handleSymbolClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-2 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"lg\",\n              onClick: handleSolve,\n              children: \"Solve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 4,\n              value: state.result,\n              readOnly: true,\n              className: \"bg-light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"R20Vvb3rx4ui6wjqCSnIvn88evA=\");\n_c = Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","useRef","Container","Form","Button","Card","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","math","SymbolKeyboard","jsxDEV","_jsxDEV","register","Calculator","_s","state","setState","input","result","history","inputRef","handleInputChange","event","prev","target","value","generateGraphData","points","xValues","yValues","x","push","y","includes","expr","parseIntegral","evaluateExpression","toLowerCase","results","solveDifferentialEquation","point","find","p","Math","abs","evaluate","labels","datasets","label","data","borderColor","tension","equation","returnPoints","h","steps","equationFunc","replace","trim","i","dy","JSON","stringify","error","Error","message","graphOptions","responsive","maintainAspectRatio","scales","title","display","text","ticks","stepSize","grid","variables","e","pi","err","numericalIntegration","f","a","b","n","sum","integralRegex","matches","Array","from","matchAll","length","variable","remainingExpr","nestedExpr","vars","nestedVars","solveNestedIntegral","depth","currentVar","solveIntegral","parts","split","map","part","order","finalResult","reduce","acc","curr","toFixed","join","handleSolve","formattedResult","toString","handleSymbolClick","symbol","current","start","selectionStart","end","selectionEnd","newValue","substring","setTimeout","newPosition","setSelectionRange","focus","className","children","Body","Group","Control","type","placeholder","onChange","onKeyPress","key","ref","fileName","_jsxFileName","lineNumber","columnNumber","onSymbolClick","variant","size","onClick","as","rows","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/ddas0/OneDrive/Desktop/AI Calc/src/components/Calculator.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Container, Form, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport * as math from 'mathjs';\r\nimport { SymbolKeyboard } from './SymbolKeyboard';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface CalculatorState {\r\n  input: string;\r\n  result: string;\r\n  history: string[];\r\n}\r\n\r\ninterface DifferentialEquationPoint {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport const Calculator: React.FC = () => {\r\n  const [state, setState] = useState<CalculatorState>({\r\n    input: '',\r\n    result: '',\r\n    history: []\r\n  });\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      input: event.target.value\r\n    }));\r\n  };\r\n\r\n  const generateGraphData = () => {\r\n    try {\r\n      const points = [];\r\n      const xValues = [];\r\n      const yValues = [];\r\n      \r\n      // Generate points with 1 unit spacing\r\n      for (let x = -10; x <= 10; x += 1) {\r\n        xValues.push(x);\r\n        let y;\r\n        \r\n        if (state.input.includes('∫')) {\r\n          // For integrals, show the function being integrated\r\n          const { expr } = parseIntegral(state.input);\r\n          y = evaluateExpression(expr, { x });\r\n        } else if (state.input.toLowerCase().includes('dy/dx')) {\r\n          // For differential equations, show the solution curve\r\n          const results = solveDifferentialEquation(state.input, true);\r\n          const point = results.find(p => Math.abs(p.x - x) < 0.1);\r\n          y = point ? point.y : null;\r\n        } else {\r\n          // For regular expressions\r\n          try {\r\n            y = math.evaluate(state.input, { x });\r\n          } catch {\r\n            y = null;\r\n          }\r\n        }\r\n        \r\n        if (y !== null) {\r\n          yValues.push(y);\r\n        }\r\n      }\r\n\r\n      return {\r\n        labels: xValues,\r\n        datasets: [\r\n          {\r\n            label: state.input,\r\n            data: yValues,\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            tension: 0.1\r\n          }\r\n        ]\r\n      };\r\n    } catch {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Update solveDifferentialEquation to optionally return points\r\n  const solveDifferentialEquation = (equation: string, returnPoints: boolean = false) => {\r\n    try {\r\n      const h = 0.1;\r\n      const steps = 100;\r\n      const results: DifferentialEquationPoint[] = [];\r\n      let x = 0;\r\n      let y = 1;\r\n\r\n      const equationFunc = (x: number, y: number): number => {\r\n        const expr = equation\r\n          .replace('dy/dx', '')\r\n          .replace('=', '')\r\n          .trim();\r\n        const result = math.evaluate(expr, { x, y });\r\n        return typeof result === 'number' ? result : 0;\r\n      };\r\n\r\n      for (let i = 0; i <= steps; i++) {\r\n        results.push({ x, y });\r\n        const dy = equationFunc(x, y);\r\n        y += h * dy;\r\n        x += h;\r\n      }\r\n\r\n      if (returnPoints) {\r\n        return results;\r\n      }\r\n\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: JSON.stringify(results, null, 2),\r\n        history: [...prev.history, `${equation} solved numerically`]\r\n      }));\r\n    } catch (error) {\r\n      if (!returnPoints) {\r\n        setState(prev => ({\r\n          ...prev,\r\n          result: `Error: ${error instanceof Error ? error.message : 'Invalid equation format'}`\r\n        }));\r\n      }\r\n      return [];\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const graphOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'x'\r\n        },\r\n        ticks: {\r\n          stepSize: 1\r\n        },\r\n        grid: {\r\n          display: true\r\n        }\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'y'\r\n        },\r\n        ticks: {\r\n          stepSize: 1\r\n        },\r\n        grid: {\r\n          display: true\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const evaluateExpression = (expr: string, variables: Record<string, number>): number => {\r\n    try {\r\n      return math.evaluate(expr, { ...variables, e: math.e, pi: math.pi });\r\n    } catch (err) {\r\n      throw new Error(`Invalid expression: ${expr}`);\r\n    }\r\n  };\r\n\r\n  const numericalIntegration = (f: (x: number) => number, a: number, b: number): number => {\r\n    const n = 1000; // number of intervals\r\n    const h = (b - a) / n;\r\n    \r\n    let sum = f(a) + f(b);\r\n    for (let i = 1; i < n; i++) {\r\n      const x = a + i * h;\r\n      sum += 2 * f(x);\r\n    }\r\n    for (let i = 1; i < n; i++) {\r\n      const x = a + (i - 0.5) * h;\r\n      sum += 4 * f(x);\r\n    }\r\n    return (h / 6) * sum;\r\n  };\r\n\r\n  const parseIntegral = (equation: string): { expr: string, vars: string[] } => {\r\n    const integralRegex = /∫\\s*([^d]*)\\s*d([a-z])/gi;\r\n    const matches = Array.from(equation.matchAll(integralRegex));\r\n    \r\n    if (matches.length === 0) {\r\n      throw new Error('No valid integral found');\r\n    }\r\n\r\n    const expr = matches[0][1].trim();\r\n    const variable = matches[0][2].toLowerCase();\r\n    const remainingExpr = equation.replace(matches[0][0], expr);\r\n\r\n    if (matches.length > 1) {\r\n      const { expr: nestedExpr, vars: nestedVars } = parseIntegral(remainingExpr);\r\n      return {\r\n        expr: nestedExpr,\r\n        vars: [variable, ...nestedVars]\r\n      };\r\n    }\r\n\r\n    return { expr, vars: [variable] };\r\n  };\r\n\r\n  const solveNestedIntegral = (expr: string, vars: string[], depth: number = 0): number => {\r\n    if (depth >= vars.length) {\r\n      return evaluateExpression(expr, {});\r\n    }\r\n\r\n    const currentVar = vars[depth];\r\n    const a = 0; // lower bound\r\n    const b = 1; // upper bound\r\n\r\n    const f = (x: number) => {\r\n      const result = solveNestedIntegral(expr, vars, depth + 1);\r\n      return evaluateExpression(expr, { [currentVar]: x });\r\n    };\r\n\r\n    return numericalIntegration(f, a, b);\r\n  };\r\n\r\n  const solveIntegral = (equation: string) => {\r\n    try {\r\n      // Split multiple integrals if they exist\r\n      const parts = equation.split('*').map(part => part.trim());\r\n      const results = parts.map(part => {\r\n        const { expr, vars } = parseIntegral(part);\r\n        const result = solveNestedIntegral(expr, vars);\r\n        return { part, result, order: vars.length };\r\n      });\r\n\r\n      // Multiply results if there are multiple integrals\r\n      const finalResult = results.reduce((acc, curr) => acc * curr.result, 1);\r\n\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: `Result = ${finalResult.toFixed(6)}\\n\\nDetails:\\n${results.map(({ part, result, order }) => \r\n          `${part} (${order}-fold integral) = ${result.toFixed(6)}`\r\n        ).join('\\n')}`,\r\n        history: [...prev.history, `Solved multiple integrals: ${equation}`]\r\n      }));\r\n    } catch (error) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: `Error: ${error instanceof Error ? error.message : 'Invalid integral format'}`\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSolve = () => {\r\n    if (!state.input.trim()) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: 'Error: Please enter an equation'\r\n      }));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (state.input.includes('∫')) {\r\n        solveIntegral(state.input);\r\n      } else if (state.input.toLowerCase().includes('dy/dx')) {\r\n        solveDifferentialEquation(state.input);\r\n      } else {\r\n        const result = math.evaluate(state.input);\r\n        // Handle near-zero values (floating point precision)\r\n        const formattedResult = Math.abs(result) < 1e-10 ? 0 : result;\r\n        setState(prev => ({\r\n          ...prev,\r\n          result: formattedResult.toString(),\r\n          history: [...prev.history, `${state.input} = ${formattedResult}`]\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        result: `Error: ${error instanceof Error ? error.message : 'Invalid expression'}`\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSymbolClick = (symbol: string) => {\r\n    const input = inputRef.current;\r\n    if (input) {\r\n      const start = input.selectionStart || 0;\r\n      const end = input.selectionEnd || 0;\r\n      const newValue = state.input.substring(0, start) + symbol + state.input.substring(end);\r\n      setState(prev => ({\r\n        ...prev,\r\n        input: newValue\r\n      }));\r\n      // Set cursor position after inserted symbol\r\n      setTimeout(() => {\r\n        const newPosition = start + symbol.length;\r\n        input.setSelectionRange(newPosition, newPosition);\r\n        input.focus();\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"py-5\">\r\n      <Card className=\"shadow-sm\">\r\n        <Card.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter mathematical expression or differential equation\"\r\n                value={state.input}\r\n                onChange={handleInputChange}\r\n                onKeyPress={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    handleSolve();\r\n                  }\r\n                }}\r\n                ref={inputRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <div className=\"mb-3\">\r\n              <SymbolKeyboard onSymbolClick={handleSymbolClick} />\r\n            </div>\r\n\r\n            <div className=\"d-grid gap-2 mb-3\">\r\n              <Button\r\n                variant=\"primary\"\r\n                size=\"lg\"\r\n                onClick={handleSolve}\r\n              >\r\n                Solve\r\n              </Button>\r\n            </div>\r\n\r\n            <Form.Group>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={4}\r\n                value={state.result}\r\n                readOnly\r\n                className=\"bg-light\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}